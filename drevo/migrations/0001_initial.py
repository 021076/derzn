# Generated by Django 3.2.4 on 2022-05-28 09:26

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Имя')),
                ('info', models.TextField(blank=True, max_length=2048, null=True, verbose_name='Сведения об авторе')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='photos/authors/', verbose_name='Фото')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата и время редактирования')),
            ],
            options={
                'verbose_name': 'Автор',
                'verbose_name_plural': 'Авторы',
            },
        ),
        migrations.CreateModel(
            name='AuthorType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Вид авторов')),
            ],
            options={
                'verbose_name': 'Вид авторов',
                'verbose_name_plural': 'Виды авторов',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='Название')),
                ('content', models.TextField(blank=True, max_length=1024, null=True, verbose_name='Содержание')),
                ('is_published', models.BooleanField(default=False, verbose_name='Опубликовано?')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='drevo.category')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='GlossaryTerm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, unique=True, verbose_name='Термин')),
                ('description', models.TextField(blank=True, max_length=2048, null=True, verbose_name='Описание')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата и время редактирования')),
                ('is_published', models.BooleanField(default=True, verbose_name='Опубликовано?')),
            ],
            options={
                'verbose_name': 'Термин глоссария',
                'verbose_name_plural': 'Термины глоссария',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='KnowledgeGradeScale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True, verbose_name='Наименование оценки')),
                ('low_value', models.FloatField(verbose_name='Нижнее значение')),
                ('is_low_in_range', models.BooleanField(default=False, verbose_name='Диапазон включает нижнее значение')),
                ('high_value', models.FloatField(verbose_name='Верхнее значение')),
                ('is_high_in_range', models.BooleanField(default=False, verbose_name='Диапазон включает верхнее значение')),
            ],
            options={
                'verbose_name': 'Градация',
                'verbose_name_plural': 'Шкала оценок знаний',
                'ordering': ('-high_value',),
            },
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Метка',
                'verbose_name_plural': 'Метки',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Tr',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, unique=True, verbose_name='Название')),
                ('order', models.PositiveSmallIntegerField(default=0, help_text='укажите порядковый номер', verbose_name='Порядок')),
                ('is_systemic', models.BooleanField(default=False, verbose_name='Системный?')),
                ('is_argument', models.BooleanField(default=False, verbose_name='Доказательная связь')),
                ('argument_type', models.BooleanField(choices=[(False, 'За'), (True, 'Против')], default=False, verbose_name='Тип довода')),
            ],
            options={
                'verbose_name': 'Вид связи',
                'verbose_name_plural': 'Виды связи',
                'ordering': ('order', 'name'),
            },
        ),
        migrations.CreateModel(
            name='Tz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='Название')),
                ('order', models.PositiveSmallIntegerField(blank=True, default=0, help_text='укажите порядковый номер', verbose_name='Порядок')),
                ('is_systemic', models.BooleanField(default=False, verbose_name='Системный?')),
                ('is_group', models.BooleanField(default=False, verbose_name='Вид является группой?')),
                ('can_be_rated', models.BooleanField(default=False, verbose_name='Возможна оценка знания')),
            ],
            options={
                'verbose_name': 'Вид знания',
                'verbose_name_plural': 'Виды знания',
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='Znanie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, unique=True, verbose_name='Тема')),
                ('content', models.TextField(blank=True, max_length=2048, null=True, verbose_name='Содержание')),
                ('href', models.URLField(blank=True, help_text='укажите www-адрес источника', max_length=256, null=True, verbose_name='Источник')),
                ('source_com', models.CharField(blank=True, max_length=256, null=True, verbose_name='Комментарий к источнику')),
                ('date', models.DateField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата и время редактирования')),
                ('order', models.IntegerField(blank=True, help_text='укажите порядковый номер', null=True, verbose_name='Порядок')),
                ('is_published', models.BooleanField(default=False, verbose_name='Опубликовано?')),
                ('author', models.ForeignKey(blank=True, help_text='укажите автора', null=True, on_delete=django.db.models.deletion.PROTECT, to='drevo.author', verbose_name='Автор')),
                ('category', mptt.fields.TreeForeignKey(blank=True, limit_choices_to={'is_published': True}, null=True, on_delete=django.db.models.deletion.PROTECT, to='drevo.category', verbose_name='Категория')),
                ('labels', models.ManyToManyField(blank=True, to='drevo.Label', verbose_name='Метки')),
                ('tz', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='drevo.tz', verbose_name='Вид знания')),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Знание',
                'verbose_name_plural': 'Знания',
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='ZnImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(blank=True, upload_to='photos/%Y/%m/%d/', verbose_name='Фото')),
                ('znanie', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='photos', to='drevo.znanie')),
            ],
        ),
        migrations.CreateModel(
            name='Visits',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('znanie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='drevo.znanie')),
            ],
        ),
        migrations.CreateModel(
            name='Relation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True, verbose_name='Дата создания')),
                ('is_published', models.BooleanField(default=False, verbose_name='Опубликовано?')),
                ('author', models.ForeignKey(help_text='укажите автора', on_delete=django.db.models.deletion.PROTECT, to='drevo.author', verbose_name='Автор')),
                ('bz', models.ForeignKey(help_text='укажите базовое знание', on_delete=django.db.models.deletion.PROTECT, related_name='base', to='drevo.znanie', verbose_name='Базовое знание')),
                ('rz', models.ForeignKey(help_text='укажите связанное знание', on_delete=django.db.models.deletion.PROTECT, related_name='related', to='drevo.znanie', verbose_name='Связанное знание')),
                ('tr', models.ForeignKey(help_text='укажите вид связи', on_delete=django.db.models.deletion.PROTECT, to='drevo.tr', verbose_name='Вид связи')),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Связь',
                'verbose_name_plural': 'Связи',
                'ordering': ('-date',),
            },
        ),
        migrations.CreateModel(
            name='IP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=100)),
                ('visits', models.ManyToManyField(blank=True, to='drevo.Znanie', verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(blank=True, max_length=2000, verbose_name='Тело комментария')),
                ('is_published', models.BooleanField(default=True, verbose_name='Опубликован')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата и время изменения')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Автор комментария')),
                ('parent', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='answers', to='drevo.comment', verbose_name='Родительский комментарий')),
                ('znanie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='drevo.znanie', verbose_name='Знание')),
            ],
            options={
                'verbose_name': 'Комментарий знания',
                'verbose_name_plural': 'Комментарии знаний',
                'ordering': ('-created_at',),
            },
        ),
        migrations.AddField(
            model_name='author',
            name='atype',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='drevo.authortype', verbose_name='Вид автора'),
        ),
        migrations.CreateModel(
            name='ZnRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(blank=True, max_length=7, verbose_name='Значение')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата и время изменения')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('znanie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='drevo.znanie', verbose_name='Знание')),
            ],
            options={
                'verbose_name': 'Рейтинг знаний',
                'verbose_name_plural': 'Рейтинг знаний',
                'unique_together': {('user', 'znanie')},
            },
        ),
    ]
